#—Å–æ–∑–¥–∞–π –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –∑–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
from PyQt5.QtCore import Qt
from PyQt5.QtWidgets import QGroupBox, QButtonGroup, QApplication,QPushButton, QWidget, QLabel, QVBoxLayout, QHBoxLayout, QRadioButton, QMessageBox
from random import shuffle, randint
#f,fj,f –∞–±–æ–±–∞ –∞–±–æ–±  –∞–±–æ–±–∞–∞–±–æ–±–∞–∞–±–æ–±–∞–∞–±–æ–±–∞–∞–±–æ–±–∞–∞–±–æ–±–∞–∞–±–æ–±–∞–∞
class Question():
    def __init__(self, quest, right_answer, wr1, wr2, wr3):
        self.quest = quest
        self.right_answer = right_answer
        self.wr1 = wr1
        self.wr2 = wr2
        self.wr3 = wr3
question_list = list()
question_list.append(
    Question("–ö–∞–∫–∞—è —Å—Ç—Ä–∞–Ω–∞ —Ä–∞–∑–≤–∞–ª–∏–ª–∞—Å—å –≤ 2008?", '–Æ–≥–æ—Å–ª–∞–≤–∏—è', '–°–°–°–†', '–ë—Ä–∞–≤–ª —Å—Ç–∞—Ä—Å', '–û–ê–†'))
question_list.append(Question(
    '–ö–∞–∫–∞—è –ø–ª–æ—â–∞–¥—å –µ—Å—Ç—å –≤ –°–ü–ë?', '–î–≤–æ—Ä—Ü–æ–≤–∞—è', "–õ—É–±—è–Ω—Å–∫–∞—è", '–ú–∞–Ω–µ–∂—Å–∫–∞—è', "–†–µ–≤–æ–ª—é—Ü–∏–∏"))
question_list.append(Question(
    "–ö–∞–∫–æ–π –≤–µ–∫- —ç–ø–æ—Ö–∞ –†–æ–∫–æ–∫–æ", 'XVIII', 'XX', 'XIX', 'XVII'))
question_list.append(Question(
    '–û–ø—Ä–µ–¥–µ–ª–∏—Ç–µ —Å–ø–æ—Å–æ–± –≤—ã—Ä–∞–∂–µ–Ω–∏—è –¥–æ–ø–æ–ª–Ω–µ–Ω–∏—è –≤ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–∏: \n –Ø —É–¥–∏–≤–ª–µ–Ω–Ω–æ –ø–æ–≥–ª—è–¥–µ–ª –Ω–∞ –≤–æ—à–µ–¥—à–µ–≥–æ.', "–ø—Ä–∏—á–∞—Å—Ç–∏–µ", '—Å—É—â–µ—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ–µ','–≥–ª–∞–≥–æ–ª','–Ω–∞—Ä–µ—á–∏–µ'))
question_list.append(Question(
    '–ö–∞–∫–æ–π –±—É–∫–≤–æ–π –æ–±–æ–∑–Ω–∞—á–∞—é—Ç —Ö–∏–º–∏—á–µ—Å–∫–∏–π —ç–ª–µ–º–µ–Ω—Ç ¬´–∞–∑–æ—Ç¬ª?', 'N', 'Na', 'Az', 'A'))
question_list.append(Question(
    '–í –∫–∞–∫–æ–º –≥–æ–¥—É –æ–±—Ä–∞–∑–æ–≤–∞–ª–∞—Å—å –†–æ—Å—Å–∏–π—Å–∫–∞—è –∏–º–ø–µ—Ä–∏—è?', '1721', '1703', '1701', '1722'))
question_list.append(Question(
    '–£ –∫–∞–∫–æ–π —Å—Ç—Ä–∞–Ω—ã –≤ —Ñ–ª–∞–≥–µ –Ω–∞—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π —è–∑—ã–∫- –ê–Ω–≥–ª–∏–π—Å–∫–∏–π', '–ê–Ω–≥–ª–∏—è', '–†–æ—Å—Å–∏—è', '–ì–µ—Ä–º–∞–Ω–∏—è', '–Ø–ø–æ–Ω–∏—è'))
question_list.append(Question(
    '–í –∫–∞–∫–æ–º –≥–æ–¥—É –±—ã–ª–∞ –æ—Ç–µ—á–µ—Å—Ç–≤–µ–Ω–Ω–∞—è –≤–æ–π–Ω–∞?', '1812', '1703', '2077', '1941'))
#–¥–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—Å–æ–∑—è –∏ –≥–ª–∞–≤–Ω–æ–≥–æ –æ–∫–Ω–∞
app = QApplication([])
main_win = QWidget()
main_win.setWindowTitle('–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ Memory Card')
main_win.resize(400, 200)
main_win.total = 0
main_win.score = 0
#–í–≤–∏–¥–∂–µ—Ç—ã
button = QPushButton('–û—Ç–≤–µ—Ç–∏—Ç—å')
question = QLabel('–í–æ–ø—Ä–æ—Å')
groupBox = QGroupBox('–í–∞—Ä–∏–∞–Ω—Ç—ã –æ—Ç–≤–µ—Ç–æ–≤')
button1 =QRadioButton('–í–∞—Ä–∏–∞–Ω—Ç 1')
button2 =QRadioButton('–í–∞—Ä–∏–∞–Ω—Ç 2')
button3 =QRadioButton('–í–∞—Ä–∏–∞–Ω—Ç 3')
button4 =QRadioButton('–í–∞—Ä–∏–∞–Ω—Ç 4')
#–õ–µ–π–∞—É—Ç—ã
question_lineH = QHBoxLayout()
groupBoxlineH = QHBoxLayout()
pushButtonH = QHBoxLayout()

buttonH = QHBoxLayout()
buttonV1 = QVBoxLayout()
buttonV2 = QVBoxLayout()

buttonV1.addWidget(button1)
buttonV1.addWidget(button2)
buttonV2.addWidget(button3)
buttonV2.addWidget(button4)

buttonH.addLayout(buttonV1)
buttonH.addLayout(buttonV2)

groupBox.setLayout(buttonH)

layout_card = QVBoxLayout()

question_lineH.addWidget(question, alignment = Qt.AlignCenter)
groupBoxlineH.addWidget(groupBox, alignment = Qt.AlignCenter)
pushButtonH.addStretch(1)
pushButtonH.addWidget(button, stretch=2)
pushButtonH.addStretch(1)

layout_card.addLayout(question_lineH)
layout_card.addLayout(groupBoxlineH)
layout_card.addLayout(buttonH)
layout_card.addLayout(pushButtonH)
layout_card.setSpacing(5)
#–≤—ã–≤–æ–¥ –æ—Ç–≤–µ—Ç–∞
ansCorrect = QLabel('–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç!')
ans2 = QLabel('–ü—Ä–∞–≤–∏–ª—å–Ω–æ/–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ')
ansGroupBox = QGroupBox('–†–µ–∑—É–ª—å—Ç–∞—Ç —Ç–µ—Å—Ç–∞')

labelLineAnsV = QVBoxLayout()

labelLineAnsV.addWidget(ans2, alignment= Qt.AlignLeft | Qt.AlignTop)
labelLineAnsV.addWidget(ansCorrect, alignment= Qt.AlignCenter)
ansGroupBox.setLayout(labelLineAnsV)
groupBoxlineH.addWidget(ansGroupBox)
ansGroupBox.hide()

RadioGroup = QButtonGroup()
RadioGroup.addButton(button1)
RadioGroup.addButton(button2)
RadioGroup.addButton(button3)
RadioGroup.addButton(button4)
#–æ–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∫–Ω–æ–ø–∫—É

ans = [button1, button2, button3, button4]


def show_result():
    groupBox.hide()
    ansGroupBox.show()
    button.setText('–°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å')

def show_question():
    RadioGroup.setExclusive(False)
    button1.setChecked(False)
    button2.setChecked(False)
    button3.setChecked(False)
    button4.setChecked(False)
    RadioGroup.setExclusive(True)
    groupBox.show()
    ansGroupBox.hide()
    button.setText('–û—Ç–≤–µ—Ç–∏—Ç—å')

def ask(q: Question):
    shuffle(ans)
    ans[0].setText(q.right_answer)
    ans[1].setText(q.wr1)
    ans[2].setText(q.wr2)
    ans[3].setText(q.wr3)
    question.setText(q.quest)
    ansCorrect.setText(q.right_answer)
    show_question()

def show_correct(res):
    ans2.setText(res)
    show_result()

def checked_answer():
    if ans[0].isChecked():
        show_correct('–ü—Ä–∞–≤–∏–ª—å–Ω–æ!')
        main_win.score += 1
    if ans[1].isChecked() or ans[2].isChecked() or ans[3].isChecked():
        show_correct('–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ!üò°üò°')
    print('–í—Å–µ–≥–æ –≤–æ–ø—Ä–æ—Å–æ–≤:', main_win.total)
    print('–ü—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤:', main_win.score)
    print('–†–µ–π—Ç–∏–Ω–≥', str(round(main_win.score/main_win.total * 100,2)) + '%')
def next_question():
    if len(question_list) > 0:
        cur_question = randint(0, len(question_list)- 1)
        ask(question_list[cur_question])
        main_win.total += 1
        question_list.remove(question_list[cur_question])
    else:
        print('–¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!')
        button.hide()
        ansCorrect.setText("–†–µ–π—Ç–∏–Ω–≥:"+ str(round(main_win.score/main_win.total * 100, 2)) + '%\n–í—Å–µ–≥–æ –≤–æ–ø—Ä–æ—Å–æ–≤:' + str(main_win.total) + '\n–ü—Ä–∞–≤—ã–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤:'+ str(main_win.score))
        ans2.setText('–†–µ–∑—É–ª—å—Ç–∞—Ç:')
        question.setText('–¢–µ—Å—Ç –ø—Ä–æ–π–¥–µ–Ω')
def click_OK():
    if button.text() == '–û—Ç–≤–µ—Ç–∏—Ç—å':
        checked_answer()
    else:
        next_question()



button.clicked.connect(click_OK)
#–∫–æ–∫–∫—à–∫–∫—à–∫—à–∫—à—à–∫
main_win.setLayout(layout_card)
next_question()
main_win.show()
app.exec_()